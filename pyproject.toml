[project]
name = "agent-foundry"
version = "0.1.0"
requires-python = ">=3.13"
dependencies = [
    "click>=8.1.8",
    "openai-agents>=0.0.12",
    "pydantic>=2.11.3",
    "python-dotenv>=1.1.0",
    "pyyaml>=6.0.2",
]

[dependency-groups]
dev = [
    "coverage>=7.8.0",
    "ipython>=9.1.0",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "rich>=14.0.0",
    "ruff>=0.11.7",
]

[tool.ruff]
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade,
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"examples/**/*.py" = ["E501"]

[tool.mypy]
strict = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_calls = false


[tool.coverage.run]
source = ["tests", "src"]

[tool.coverage.report]
show_missing = true
sort = "-Cover"
exclude_also = [
    # This is only executed while typechecking
    "if TYPE_CHECKING:",
    "@abc.abstractmethod",
    "raise NotImplementedError",
    "logger.debug",
]

[tool.pytest.ini_options]
addopts = [
    "--pdb",
    "--tb=short",
    "--disable-warnings",
    "--maxfail=1",
]
env_file = ".env"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
filterwarnings = [
    # This is a warning that is expected to happen: we have an async filter that raises an exception
    "ignore:DeprecatedWarning:RuntimeWarning:UserWarning",
]
